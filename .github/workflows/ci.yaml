name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
#    branches:
#      - master
#      - lsof # just to be able to run all these builds on our own fork
jobs:
  with-docker:
    name: Inside Container ${{matrix.java}}-zulu-centos
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/java/jdk:${{matrix.java}}-zulu-centos
    strategy:
      matrix:
        java: [ 8, 11 ]
      fail-fast: false
      max-parallel: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test with Maven
        run: ./mvnw clean verify -V -B -D"maven.artifact.threads=64" -D"org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" -D"disable-toolchain" -D"java.version=${{matrix.java}}" -D"inside-container=true"
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Container ${{matrix.java}}-zulu-centos)
          path: "**/target/surefire-reports/**"
  without-docker:
    name: Java ${{matrix.java}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        java: [ 8, 11 ]
        distribution: [ zulu ]
      fail-fast: false
      max-parallel: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Java ${{matrix.distribution}} ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: ${{matrix.distribution}}
      - name: Test with Maven
        run: ./mvnw clean verify -V -B -D"maven.artifact.threads=64" -D"org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" -D"disable-toolchain" -D"java.version=${{matrix.java}}"
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Java ${{matrix.java}} on ${{matrix.os}})
          path: "**/target/surefire-reports/**"
  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: [ with-docker, without-docker ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: "artifacts/**/*.xml"
